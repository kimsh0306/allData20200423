<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orm.mybatis.mapper.gymMapper">

	<resultMap id="gymLogin" type="map"/>
	
<!-- ======================= GYM ======================= -->
	<select id="getClassList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getClassDetail" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getClassMemList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getNoticeList" parameterType="map" resultType="map">
		SELECT not_seq, not_title, not_cont, gym_no
		  FROM notice
		 ORDER BY gym_no
		SELECT not_seq, not_title, not_cont, gym_no FROM notice
		<where>
			<if test="gym_no!=null and gym_no.length>0">
				AND gym_no = #{gym_no}
			</if>
			<if test="not_title!=null and not_title.length>0">
				AND not_title = #{not_title}
			</if>
			<if test="not_cont!=null and not_cont.length>0">
				AND not_cont = #{not_cont}
			</if>
		</where>
	</select>
	<select id="getChartList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getContentList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getInfoList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getReviewList" parameterType="map" resultType="map">
		SELECT 1 FROM dual
	</select>
	<select id="getLogin" parameterType="map" resultType="map">
		SELECT gym_no, gym_name
		  FROM gym
		 WHERE rownum = 1
		   AND gym_id = #{gym_id}
		   AND gym_pw = #{gym_pw}
	</select>
	<select id="getProcLogin"  parameterType="map" statementType="CALLABLE">
		{ call proc_gym_login(#{gym_id},#{gym_pw},#{key
						                           ,jdbcType=CURSOR
						                           ,mode=OUT
						                           ,javaType=java.sql.ResultSet
						                           ,resultMap=gymLogin})}
	</select>
	
	<insert id="classIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="classMemIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="gymNoticeIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="chartIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	<insert id="contentIns" parameterType="map">
		INSERT into insert_test values('1', '1', '1')
	</insert>
	
	<update id="classUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="classMemUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="gymNoticeUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="chartUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="contentUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	<update id="gymInfoUpd" parameterType="map">
		UPDATE insert_test set mem_name='1' WHERE mem_id='1'
	</update>
	
	<delete id="classDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="classMemDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="gymNoticeDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="chartDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	<delete id="contentDel" parameterType="map">
		DELETE insert_test where mem_id = '5'
	</delete>
	
</mapper>